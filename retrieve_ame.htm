<html>
<head>
	<title>線上教材：音樂資訊分析</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css">
	<base target="_blank">
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushPython.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
</head>

<body bgcolor="#ccccff">

<blockquote>

<p>音高追蹤的目標，是要取得一段音訊當中的音高序列；而抽取出來的音高序列，經常會在後續的一些研究題目，例如哼唱選歌，甚至於音樂生成當中被使用，因此，音高追蹤可以說是音訊處理的基本功之一。我們在基本處理的篇章當中，已經看過一些簡單的、半自動的音高追蹤，而在此篇當中，則將針對追蹤出單一音高（特別是人聲）的狀況，做更仔細一些的相關介紹。如果你有興趣的是同時追蹤多個音高的狀況，例如複數人的合唱或複數樂器的演奏，則請自行搜尋相關研究來參考。本篇接下來的程式範例所使用的音檔，將主要來自 MIR-1K 資料集，所以先請各位自行上網搜尋，並下載此資料集。我們接下來，將會使用該資料集中的一千個歌唱小片段（Wavfile 子資料夾），以及他們的音高標註（PitchLabel 子資料夾）。下載後，記得開啟前述提到的兩個子資料夾，觀察一下音檔以及音高標註的內容。</p>

<p>若需要評估音高追蹤的效果好壞，則常見的辦法是準確度。你可能會想問，抽取出的音高是一條序列，逼準答案的音高也是一條序列，那麼兩條序列要怎麼定義準確度呢？實際上，對於這兩條音高序列中，某相同位置的單一一個值，我們會說如果這兩個值的差距在一個範圍之內的話，就算是正確，而這個範圍通常會定為四分之一個半音，也就是鋼琴上相鄰兩個鍵（白鍵黑鍵都要算喔！）的差距的四分之一。而整條序列的準確度，除了簡單粗暴的計算答對的比率以外，如果你要處理的音高追蹤是像人唱歌這樣可能偶爾會停下來呼吸，所以不時地會有一小段期間沒有音高的狀況，還可以把準確度分成以下幾種：</p>
<ul>
	<li>Raw Pitch Accuracy (RPA)：標準答案中，有音高的部分的答對比率。沒有音高的部分，不論你的追蹤方法做了什麼判斷，都不去考慮。</li>
	<li>Raw Chroma Accuracy (RCA)：與 RPA 類似，只是差距剛好是整數個八度再加減一個小範圍（例如先前提到的四分之一個半音）也算是正確。</li>
	<li>Overall Accuracy (OA)：沒有音高的部分，也要能判斷出「這裡沒有音高」才算正確。</li>
</ul>

<p>舉例來說，假設標準答案是 [60, 60, 60, 61, 61, 63, 63, 0, 0, 65]（其中 0 的部分代表沒有音高），而追蹤出的結果是 [60.1, 59.9, 72.1, 63, 63, 63, 63, 64, 0, 65] 的話，則 RPA 是 8 個裡面對了 5 個，即 62.5%；RCA 是 8 個裡面對了 6 個，即 75%；OA 是 10 個裡面對了 7 個，即 70%。你可以看到這三種評估方式的結果各有差距，在實際應用上，你可以視自己的需要，選擇合適的標準。</p>

</blockquote>

</body></html>
